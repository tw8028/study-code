@rendermode InteractiveServer

<h3>SyncPlayer</h3>

<table class="table">
	<thead>
		<tr>
			<th></th>
			<th>ID</th>
			<th>State</th>
		</tr>
	</thead>

	<tbody>
		@foreach (var item in items)
		{
			<tr>
				<th><input type="checkbox" @bind="@item.IsSync" /></th>
				<th>@item.Id</th>
				<th>
					@if (item.State == State.Equal)
					{
						<span>&#10003</span>
					}
					else
					{
						<span class="alert-warning">@item.State</span>
					}
				</th>
			</tr>
		}
	</tbody>
</table>

<button class="btn btn-primary" @onclick="SelectAll">All</button>
<button class="btn btn-primary" @onclick="Deselect">Cancel</button>
<button class="btn btn-primary" @onclick="Sync">Sync to Unity</button>

@code {
	private const string PATH_FILE = "D:/Projects/03动作/角色蒙皮";
	private const string PATH_UNITY = "D:/Projects/Test/Assets/Art/Models/Players";
	List<SyncItem> items = GetItems();

	static private List<SyncItem> GetItems()
	{
		List<SyncItem> list = new();
		var files = FileHelper.GetFiles(new DirectoryInfo(PATH_FILE), new Dictionary<string, string>());
		foreach (var file in files)
		{
			// 使用文件名生成导入路径
			string targetFolder = Path.Combine(PATH_UNITY, file.Key.Remove(2, 1).Insert(2, "0"));
			// 创建对象
			list.Add(new SyncItem(file.Key, file.Value, targetFolder));
		}
		return list;
	}
	private void SelectAll()
	{
		foreach (var item in items)
		{
			item.IsSync = true;
		}
	}
	private void Deselect()
	{
		foreach (var item in items)
		{
			item.IsSync = false;
		}
	}
	private void Sync()
	{
		foreach (var item in items)
		{
			item.CopeTo();
		}
	}
}
