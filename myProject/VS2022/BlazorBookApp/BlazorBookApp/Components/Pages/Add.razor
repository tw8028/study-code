@page "/add"
@inject IWebHostEnvironment Env
@rendermode InteractiveServer

<PageTitle>Add book</PageTitle>

<h1>Add book</h1>

<InputFile OnChange="OnFileSelected" multiple/>

@if (loadedFiles.Count > 0)
{
    <ul>
        @foreach (var file in loadedFiles)
        {
            <li>
                @file.Name<br/>
            </li>
        }
    </ul>
}

<p></p>
<button class="btn btn-primary btn-sm" @onclick="UploadFile">Upload</button>


@code {
    private readonly List<IBrowserFile> loadedFiles = [];
    private const long MaxFileSize = 1024 * 1024 * 10; // 10 MB
    private const int MaxAllowedFiles = 100;

    private void OnFileSelected(InputFileChangeEventArgs e)
    {
        loadedFiles.Clear();
        IReadOnlyList<IBrowserFile> files = e.GetMultipleFiles(MaxAllowedFiles);

        foreach (IBrowserFile file in files)
        {
            if (!file.Name.EndsWith(".epub")) continue;
            if (file.Size <= MaxFileSize)
            {
                loadedFiles.Add(file);
            }
        }
    }

    private async Task UploadFile()
    {
        if (!loadedFiles.Any()) return;
        foreach (IBrowserFile file in loadedFiles)
        {
            var filePath = Path.Combine(Env.WebRootPath, "books", file.Name);
            await using var stream = File.Create(filePath);
            await file.OpenReadStream(maxAllowedSize: MaxFileSize).CopyToAsync(stream);
        }
    }

}