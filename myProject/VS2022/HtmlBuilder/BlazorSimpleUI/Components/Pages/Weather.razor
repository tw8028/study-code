@page "/weather"
@inject IWebHostEnvironment HostEnv
@inject IJSRuntime JsRuntime
@using BlazorSimpleUI.Components.Template

<PageTitle>Weather</PageTitle>
<h1>Epub to Html</h1>
<p>可删除不需要的章节</p>

<div>
    <InputFile OnChange="HandleFileSelected" style="width: 600px"/>
    <button type="button" class="btn btn-primary" @onclick="DownloadFile">Download</button>
</div>

<TddTable Data="@Chapters">
    <HeaderTemplate>
        <th>Chapters</th>
    </HeaderTemplate>
    <RowTemplate>
        <td>@context.Key</td>
    </RowTemplate>
    <Action Context="row">
        <td>
            <button class="btn btn-secondary btn-sm" @onclick="()=>DeleteChapter(row)">delete</button>
        </td>
    </Action>
</TddTable>

@code {
    private IBrowserFile? BrowserFile { get; set; }
    private string BookTitle { get; set; } = string.Empty;
    private List<EpubLocalTextContentFile> Chapters { get; set; } = [];

    private async Task HandleFileSelected(InputFileChangeEventArgs e)
    {
        string fileName = e.File.Name;
        if (!fileName.EndsWith(".epub"))
        {
            Console.WriteLine($"非 epub 文件: {fileName}");
            return;
        }

        BrowserFile = e.File;
        string path = Path.Combine(HostEnv.WebRootPath, "BrowserFile", BrowserFile.Name);
        await using var fs = new FileStream(path, FileMode.Create);
        await BrowserFile.OpenReadStream(maxAllowedSize: 1024 * 1024 * 10).CopyToAsync(fs);
        EpubBook book = await EpubReader.ReadBookAsync(fs);
        BookTitle = book.Title;
        Chapters = book.Content.Html.Local.ToList();
        StateHasChanged();
    }

    private void DeleteChapter(EpubLocalTextContentFile row)
    {
        Chapters.Remove(row);
    }

    private async Task DownloadFile()
    {
        if (!Chapters.Any()) return;
        string[] chaptersText = Chapters.Select(c => c.Content).ToArray();
        string content = HtmlTextBuilder.Build(chaptersText, BookTitle);
        string fileName = BookTitle + ".html";

        // 调用 JavaScript 函数触发下载
        await JsRuntime.InvokeVoidAsync("downloadFile", fileName, content);
    }

}