@page "/"
@inject ChatRequest ChatRequestService


<PageTitle>Chat</PageTitle>

<div class="input-group mb-3">
    <button class="btn btn-outline-secondary" type="button" @onclick="NewChat">new</button>
    <div class="input-group-prepend">
        <span class="input-group-text" id="basic-addon1">@@system</span>
    </div>
    <input type="text" class="form-control" placeholder="character setting" aria-label="character setting"
           aria-describedby="basic-addon1" @bind="prompt">
</div>

@*<h3>DeepSeek-V3</h3>*@
<div style="display: flex; height: 100%;">
    <!-- 左侧固定宽度 -->
    <div style="width: 200px; background-color: #f0f0f0;">
        chat message list
    </div>
    <!-- 右侧自适应宽度 -->
    <div style="flex: 1;">
        <div style="margin-bottom: 120px; margin-left: 20px">
            content
            @if (chatRecordStringsList.Any())
            {
                foreach (string[] chat in chatRecordStringsList)
                {
                    <div style="color: #0a3622">@chat[0]</div>
                    @((MarkupString)chat[1])
                }
            }

            <div style="position: fixed; bottom: 20px; width: 65%">
                <div class="input-group">
                    <div class="input-group-prepend">
                        <button class="btn btn-success" type="button" @onclick="SubmitText" disabled="@isLoading">Button
                        </button>
                    </div>
                    <textarea class="form-control" aria-label="With textarea" @bind="inputText"></textarea>
                </div>
            </div>
        </div>
    </div>
</div>



@code {
    [Parameter] public string Page { get; set; } = string.Empty;
    private string? prompt = "你是一个计算机科学家，专门解答C#，.net相关的编程问题。";
    private string? inputText;
    private List<Message> ChatRecord { get; set; } = [];
    private List<string[]> chatRecordStringsList = [];
    private bool isLoading;


    private async Task SubmitText()
    {
        if (string.IsNullOrEmpty(inputText) || string.IsNullOrEmpty(prompt)) return;
        // 第一次请求
        if (!ChatRecord.Any())
        {
            ChatRecord.Add(MessageFactory.System(prompt));
            // add ChatMessage
        }

        ChatRecord.Add(MessageFactory.User(inputText));
        inputText = null;
        isLoading = true;
        var response = await ChatRequestService.GetChatCompletionAsync(ChatRecord);
        if (response.Content != null)
        {
            ChatRecord.Add(MessageFactory.Assistant(response.Content));
            // update ChatMessage
        }

        // show chat
        chatRecordStringsList = ChatRecord.Select(c => new[] { c.Role, Markdown.ToHtml(c.Content) }).ToList();
        isLoading = false;
        StateHasChanged();
    }

    private void NewChat()
    {
        chatRecordStringsList.Clear();
        ChatRecord.Clear();
        inputText = null;
    }

}
